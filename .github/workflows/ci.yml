# name: Build and Push Docker Image to Docker Hub





# jobs:
#   build_and_push:
#     runs-on: ubuntu-latest

#     steps:
#     # Step 1: Checkout the code
#     - name: Checkout code
#       uses: actions/checkout@v2

#     # Step 2: Set up Docker Buildx
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     # Step 3: Log in to Docker Hub
#     - name: Log in to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
#         password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password or Personal Access Token

#     # Step 4: Build Docker image
#     - name: Build Docker image
#       run: |
#         docker build -t ${{ secrets.DOCKER_USERNAME }}/test:latest .  # Replace with your Docker Hub username and repo name

#     # Step 5: Push Docker image to Docker Hub
#     - name: Push Docker image to Docker Hub
#       run: |
#         docker push ${{ secrets.DOCKER_USERNAME }}/test:latest  # Replace with your Docker Hub username and repo name
#   # Run Trivy scan using the Trivy GitHub Action
#     - name: Install Trivy and run vulnerability scan
#       uses: aquasecurity/trivy-action@0.28.0
#       with:
#         image-ref: ${{ secrets.DOCKER_USERNAME }}/test:latest 
#         format: 'json'
#         output: trivy-report.json  # Save to a subfolder
#       env:
#         TRIVY_SEVERITY: HIGH,CRITICAL  # Specify severity levels (e.g., HIGH, CRITICAL)

        
#     - name: List files in the directory (for debugging)
#       run: ls -alh   # This will show if the trivy-report.json exists
    
        

#     # Optional: Upload Trivy results as an artifact
#     - name: Upload Trivy results as an artifact
#       uses: actions/upload-artifact@v4
#       with:
#         name: trivy-scan-results
#         path: trivy-report.json  # Adjust the path if you save the report in a different location or format

name: Fortify Scan

on:
   workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-20.04
    container:
      image: fortify/fortify-sca:latest  # Use Fortify's official Docker image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Fortify Source Code Scan
        run: |
          # Run the Fortify scan on your source code
          sourceanalyzer -b my-build-id -clean
          sourceanalyzer -b my-build-id ./src -f fortify-results.fpr

      - name: Upload Fortify results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: fortify-scan-results
          path: fortify-results.fpr  # Path to your Fortify results file

