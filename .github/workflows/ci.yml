name: Build and Push Docker Image to Docker Hub

on:

  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
        password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password or Personal Access Token

    # Step 4: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/test:latest .  # Replace with your Docker Hub username and repo name

    # Step 5: Push Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/test:latest  # Replace with your Docker Hub username and repo name
  # Run Trivy scan using the Trivy GitHub Action
    - name: Install Trivy and run vulnerability scan
      uses: aquasecurity/trivy-action@v0.25.0
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/test:latest 
      env:
        TRIVY_SEVERITY: HIGH,CRITICAL  # Specify severity levels (e.g., HIGH, CRITICAL)

    # Optional: Upload Trivy results as an artifact
    - name: Upload Trivy results as an artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: trivy-scan-results
        path: trivy-report.json  # Adjust the path if you save the report in a different location or format
    # # Step 3: Run Trivy vulnerability scan for Docker image
    # - name: Install Trivy and run vulnerability scan
    #   uses: aquasecurity/trivy-action@v0.5.0
    #   with:
    #     image-ref: your-docker-image-name:latest  # Specify your Docker image name here
    #   env:
    #     TRIVY_SEVERITY: HIGH,CRITICAL  # You can set severity levels for the scan

    # # Step 4: Run Fortify static code analysis
    # - name: Install Fortify and run scan
    #   run: |
    #     curl -O https://fortify.com/downloads/fortify-sca-latest.zip
    #     unzip fortify-sca-latest.zip -d /opt/fortify
    #     /opt/fortify/bin/fortify-sca -b build_id -source source_path -scan
    #   env:
    #     FORTIFY_USERNAME: ${{ secrets.FORTIFY_USERNAME }}
    #     FORTIFY_PASSWORD: ${{ secrets.FORTIFY_PASSWORD }}
