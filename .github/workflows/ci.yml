name: SonarCloud Scan
on:
 workflow_dispatch:

jobs:
  sonarcloud:
    runs-on: ubuntu-latest  # You can use ubuntu-latest or any other environment

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set JAVA_HOME to Java 17
      run: |
        echo "Setting JAVA_HOME to Java 17"
        export JAVA_HOME=/opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.14-7/x64
        export PATH=$JAVA_HOME/bin:$PATH
        echo "JAVA_HOME is set to: $JAVA_HOME"

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set SONAR_TOKEN as secret
      run: echo "SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}" >> $GITHUB_ENV

    - name: Run Maven SonarScanner
      run: mvn clean verify sonar:sonar \
        -Dsonar.projectKey=Mai_EFAT \
        -Dsonar.projectName=jenkins-demo \
        -Dsonar.branch.name=${{ github.head_ref || github.ref_name }} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}


    # # Step 3: Run Trivy vulnerability scan for Docker image
    # - name: Install Trivy and run vulnerability scan
    #   uses: aquasecurity/trivy-action@v0.5.0
    #   with:
    #     image-ref: your-docker-image-name:latest  # Specify your Docker image name here
    #   env:
    #     TRIVY_SEVERITY: HIGH,CRITICAL  # You can set severity levels for the scan

    # # Step 4: Run Fortify static code analysis
    # - name: Install Fortify and run scan
    #   run: |
    #     curl -O https://fortify.com/downloads/fortify-sca-latest.zip
    #     unzip fortify-sca-latest.zip -d /opt/fortify
    #     /opt/fortify/bin/fortify-sca -b build_id -source source_path -scan
    #   env:
    #     FORTIFY_USERNAME: ${{ secrets.FORTIFY_USERNAME }}
    #     FORTIFY_PASSWORD: ${{ secrets.FORTIFY_PASSWORD }}
